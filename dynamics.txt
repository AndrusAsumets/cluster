>> THE BUBBLE FACTORY


global variables:
energy, materials

if (energy)
	- factory (train buildings, components using energy)

	if (researched)
		buildings:
			- power plant (recharge energy)
			- mine
				materials:
					- earth
					- water
					- wind
					- fire
			- airport, barracks
				(if material)
					components:
						- earth > strength
						- water > recharge speed
						- wind  > move speed
						- fire  > damage
			- turret
				(if material)
					components:
						- earth > strength
						- water > slow
						- wind  > attack speed
						- fire  > damage
			- radar (extends towers range)
			- repair shop


* airport, barracks > if (energy) > grid of components > if (materials) > choose components
* repairing: click on repair shop > repair > click on building > (if path) create path
* bubble inner size radius: strength
* bubble size: damage
* leveling: base 2


bubble:
water (blue): speed
earth (green): strength
fire (red): demolish
wind (white): air

darts:
water (blue): slow
earth (green): damage
fire (red): splash
wind (white): range

element | slow      | speed     | range    | air       | splash   | horde    | damage    | strength  |
--------|-----------|-----------|----------|-----------|----------|----------|-----------|-----------|
earth   |  0        |  1        |  1       |  0        |  1       |  0       |  2        |  2        | 7
water   |  1        |  2        |  1       |  1        |  1       |  0       |  1        |  1        | 6
fire    |  0        |  1        |  1       |  0        |  2       |  1       |  1        |  1        | 5
wind    |  0        |  1        |  2       |  0        |  1       |  0       |  1        |  1        | 6


* 
* create/emit elements & score by host
* varying recharge count for bubbles
* recalculate paths on build, diff and update just the elements for which diffs dont match

bubblefactory.games
bubblefactory.game
sf88r.com

NOW:
* unify canvases


PHASE1:
* sync time
* menu & player switching for mobile
* game modes (2 player, 4 player)
* store game data to file/database & playback
* game balance & upgrades
* dropdown for removing / upgrading
* different sizes for the bubbles that correspond to strength/power
* click on a bubble, then press on a factory to release the power
* cant build here warning
* enemy picker
* game rooms
* lobby
* ranking
* deployment
* ionic
* testing

PHASE2:
* pricing model
* release strategy
* IP
* app store / play store
* operations

PEOPLE:
* story > who?
* moneying model > bootstrappig/funding
* help for development > Kristjan? Arco?
* sounds > Markku?
* landing -> Kaarel? & Okeiko?
* scaling -> Kristo?

npm run server
npm run client

password auth: 
https://www.digitalocean.com/community/tutorials/how-to-set-up-password-authentication-with-nginx-on-ubuntu-14-04 
nginx config edit: 
sudo nano /etc/nginx/sites-enabled/default 
nginx config: 
server {
    listen 80;

    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/.htpasswd;
    location / {
        proxy_pass http://localhost:1337;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 8080;

    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/.htpasswd;

	location ~ ^/timesync(.*)$ {
        proxy_pass http://localhost:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

restart nginx: 
sudo service nginx restart 

close ports: 
iptables -A INPUT -p tcp --dport 3000 -s 192.168.0.0/24 -j ACCEPT
iptables -A INPUT -p tcp --dport 3000 -s 127.0.0.0/8 -j ACCEPT
iptables -A INPUT -p tcp --dport 3000 -j DROP

start server:
nodemon --ignore 'public/' .js

kill process by port:
fuser -n tcp -k 1337

* fix crash when clicking to sides
* fix attacking
* fix walkables by creating a grid for each player
* close first and last rows
